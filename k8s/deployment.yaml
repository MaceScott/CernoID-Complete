apiVersion: apps/v1
kind: Deployment
metadata:
  name: cernoid-api
  namespace: cernoid
spec:
  replicas: 3
  selector:
    matchLabels:
      app: cernoid-api
  template:
    metadata:
      labels:
        app: cernoid-api
    spec:
      containers:
      - name: api
        image: cernoid/api:latest
        ports:
        - containerPort: 8000
        resources:
          requests:
            cpu: "500m"
            memory: "512Mi"
          limits:
            cpu: "1"
            memory: "1Gi"
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: cernoid-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: cernoid-secrets
              key: redis-url
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cernoid-recognition
  namespace: cernoid
spec:
  replicas: 2
  selector:
    matchLabels:
      app: cernoid-recognition
  template:
    metadata:
      labels:
        app: cernoid-recognition
    spec:
      containers:
      - name: recognition
        image: cernoid/recognition:latest
        resources:
          requests:
            cpu: "1"
            memory: "2Gi"
            nvidia.com/gpu: 1
          limits:
            cpu: "2"
            memory: "4Gi"
            nvidia.com/gpu: 1
        env:
        - name: MODEL_PATH
          value: "/models"
        volumeMounts:
        - name: models
          mountPath: "/models"
      volumes:
      - name: models
        persistentVolumeClaim:
          claimName: model-storage
---
apiVersion: v1
kind: Service
metadata:
  name: cernoid-api
  namespace: cernoid
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 8000
  selector:
    app: cernoid-api
---
apiVersion: v1
kind: Service
metadata:
  name: cernoid-recognition
  namespace: cernoid
spec:
  type: ClusterIP
  ports:
  - port: 8001
    targetPort: 8001
  selector:
    app: cernoid-recognition
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: cernoid-ingress
  namespace: cernoid
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
  - hosts:
    - api.cernoid.com
    secretName: cernoid-tls
  rules:
  - host: api.cernoid.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: cernoid-api
            port:
              number: 80
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: cernoid-api-hpa
  namespace: cernoid
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: cernoid-api
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 80 