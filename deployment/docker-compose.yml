version: '3.8'

services:
  # Face Recognition API Service
  face-recognition-api:
    build:
      context: ..
      dockerfile: deployment/Dockerfile
    image: face-recognition-system:latest
    container_name: face-recognition-api
    ports:
      - "8000:8000"
    volumes:
      - ../models:/app/models
      - ../data:/app/data
    environment:
      - CUDA_VISIBLE_DEVICES=0
      - MODEL_PATH=/app/models
      - DATA_PATH=/app/data
      - LOG_LEVEL=INFO
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - API_WORKERS=4
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    restart: unless-stopped

  # Analytics Database
  analytics-db:
    image: postgres:14-alpine
    container_name: analytics-db
    environment:
      - POSTGRES_DB=face_recognition
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=secure_password
    volumes:
      - analytics_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped

  # Dashboard Service
  dashboard:
    build:
      context: ..
      dockerfile: deployment/Dockerfile.dashboard
    image: face-recognition-dashboard:latest
    container_name: face-recognition-dashboard
    ports:
      - "8050:8050"
    environment:
      - API_URL=http://face-recognition-api:8000
      - DASHBOARD_PORT=8050
    depends_on:
      - face-recognition-api
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:alpine
    container_name: face-recognition-cache
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  # Monitoring Stack
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=secure_password
    depends_on:
      - prometheus
    restart: unless-stopped

volumes:
  analytics_data:
  redis_data:
  prometheus_data:
  grafana_data: 